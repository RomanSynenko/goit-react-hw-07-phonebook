{"version":3,"sources":["Components/ContatctList/List.module.scss","Components/ContactForm/Form.module.scss","Components/Filter/Filter.module.scss","Components/ContainerStyle.module.scss","redux/selector.js","redux/action.js","redux/operation.js","Components/ContactForm/ContactForm.js","Components/ContatctList/ContactListItem.js","Components/ContatctList/ContatctList.js","Components/Filter/Filter.js","Components/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","getLoad","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","normolizedFilter","toLowerCase","contact","name","includes","getContactName","map","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","dispatch","get","then","data","catch","error","post","contactId","delete","INITIAL_STATE","phone","ContactForm","handleChangeForm","target","value","setState","uniqueContact","props","find","handleFormSubmit","e","preventDefault","onSubmit","resetForm","alert","this","fetchContact","className","s","title","contact_form","contact_input","type","placeholder","onChange","Component","connect","loadConntact","contactsOperations","ContactListItem","id","onRemove","contact_item","contact_name","delete_button","onClick","propTypes","PropTypes","number","isRequired","string","func","deleteContact","contactsOperation","length","contact_list","event","search_block","App","container","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ccbdfa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"List_contact_list__3d9ss\",\"delete_button\":\"List_delete_button__1Fy4K\",\"contact_item\":\"List_contact_item__11C51\",\"contact_name\":\"List_contact_name__J7qw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3NbAF\",\"contact_form\":\"Form_contact_form__n2Wti\",\"contact_input\":\"Form_contact_input__39-kE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__21DuS\",\"contact_input\":\"Filter_contact_input__3mrr1\",\"search_block\":\"Filter_search_block__2np_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContainerStyle_container__29SzB\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoad = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\nexport const getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normolizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normolizedFilter),\n        );\n    },\n);\nexport const getContactName = createSelector([getAllContacts], contacts => {\n    return contacts.map(({ name }) => name);\n});\n","import { createAction } from '@reduxjs/toolkit';\n\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contact/changeFilter');\n","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n} from './action';\n\naxios.defaults.baseURL = 'http://localhost:6060';\n\nconst fetchContact = () => dispatch => {\n    dispatch(fetchContactRequest());\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\n        .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact = contact => dispatch => {\n    dispatch(addContactRequest());\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess({ ...data })))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default { fetchContact, addContact, deleteContact };\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { getLoad, getContactName } from '../../redux/selector';\nimport contactsOperations from '../../redux/operation';\n\n// import actions from \"../../redux/action\";\n\nimport s from './Form.module.scss'\n\n\n\nconst INITIAL_STATE = {\n    name: '',\n    phone: '',\n}\nclass ContactForm extends Component {\n    state = {\n        ...INITIAL_STATE\n    }\n    componentDidMount() {\n        this.props.fetchContact();\n    }\n    handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n        this.setState({ [name]: value });\n    }\n    uniqueContact = name => {\n        const contact = !this.props.name.find(contact => contact === name);\n        return contact;\n    };\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { name } = this.state;\n        this.uniqueContact(name);\n        if (this.state.name !== '') {\n            if (!this.uniqueContact(name)) {\n                alert(`'${name} is already in contacts'`);\n                return;\n            } else {\n                this.props.onSubmit(this.state);\n                this.resetForm();\n            }\n            return;\n        }\n        alert('Enter the name or number');\n    }\n    resetForm = () => this.setState(INITIAL_STATE)\n    render() {\n        const { name, phone } = this.state;\n        return (\n            <>\n                <h2 className={s.title}>Contact Form</h2>\n                <form className={s.contact_form} onSubmit={this.handleFormSubmit}>\n                    <input\n                        className={s.contact_input}\n                        type=\"text\" name='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={this.handleChangeForm} />\n                    <input\n                        className={s.contact_input}\n                        type=\"tel\" name='phone'\n                        placeholder='Enter phone number'\n                        value={phone}\n                        onChange={this.handleChangeForm} />\n                    <button className={s.contact_input}\n                        type='submit'>Add contact</button>\n                </form>\n            </>\n        )\n    }\n};\n\n\nconst mapStateToProps = state => ({\n    loadConntact: getLoad(state),\n    name: getContactName(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContact: () => dispatch(contactsOperations.fetchContact()),\n    onSubmit: data => dispatch(contactsOperations.addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './List.module.scss';\n\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n    return (\n        <li className={s.contact_item}>\n            <p className={s.contact_name}>{name} </p> :\n            <p>{phone}</p>\n            <button className={s.delete_button}\n                onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n};\nContactListItem.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\nexport default ContactListItem;","import React from 'react';\nimport s from './List.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\nimport ContactListItem from './ContactListItem'\nimport { getVisibleContacts } from '../../redux/selector';\n\nimport contactsOperation from \"../../redux/operation\"\n\n\nconst ContactList = ({ contacts, deleteContact }) => {\n    if (contacts.length === 0) return null\n    return (\n        <ul className={s.contact_list}>\n            {\n                contacts\n                    .map(\n                        (contact) => <ContactListItem\n                            key={contact.id}\n                            {...contact}\n                            onRemove={deleteContact} />\n                    )\n            }\n        </ul>\n    )\n};\n\n\n// const visibleContacts = (allContacts, filter) => {\n//     const normolizedFilter = filter.toLowerCase();\n//     return allContacts.filter(contact =>\n//         contact.name.toLowerCase().includes(normolizedFilter),\n//     );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//     contacts: visibleContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//     deleteContact: id => dispatch(action.deleteContact(id)),\n// });\n\nconst mapStateToProps = state => ({\n    contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    deleteContact: id => dispatch(contactsOperation.deleteContact(id)),\n});\n\nContactListItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect } from 'react-redux';\n// import action from '../../redux/action';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.scss';\nimport { filterContact } from '../../redux/action';\nimport { getFilter } from '../../redux/selector';\n\nconst Filter = ({ filter, onChange }) => {\n    return (\n        <div className={s.search_block}>\n            <h2 className={s.title}>Contacts list</h2>\n            <input\n                className={s.contact_input}\n                type=\"text\"\n                name='filter'\n                value={filter}\n                onChange={onChange}\n                placeholder='Enter name for your Search'\n            />\n        </div>\n    )\n};\n\n// const mapStateToProps = state => ({\n//     value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//     onChange: e =>\n//         dispatch(action.filterContact(e.target.value)),\n// });\n\nconst mapStateToProps = state => ({\n    value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: event =>\n        dispatch(filterContact(event.target.value)),\n});\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport s from './ContainerStyle.module.scss';\nimport ContactList from \"./ContatctList/ContatctList\";\nimport Filter from \"./Filter\";\n\nconst App = () => {\n  return (\n    <div className={s.container}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  )\n};\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    filterContact,\n} from './action';\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n});\nconst filter = createReducer('', {\n    [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport contactReducer from \"./reducer\";\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from \"react-redux\";\n\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"));\n"],"sourceRoot":""}